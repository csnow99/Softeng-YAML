---
swagger: "2.0"
info:
  description: "cs3733 YAML API"
  version: 1.1.0
  title: "cs3733 YAML API"
# host: "65y680psjl.execute-api.us-east-2.amazonaws.com"
# basePath: "/beta"
schemes:
- "https"
paths:
  /adminPage:
    get:
      operationId: "createReport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateReportRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateReportRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CreateReportResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:createReport/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    post:
      operationId: "deleteChoices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "DeleteChoicesRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteChoicesRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/DeleteChoicesResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:deleteOldReports/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /amendVote:
    post:
      operationId: "amendVote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "AmendVoteRequest"
        required: true
        schema:
          $ref: "#/definitions/AmendVoteRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AmendVoteResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:amendVote/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /completeChoice:
    post:
      operationId: "completeChoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CompleteChoiceRequest"
        required: true
        schema:
          $ref: "#/definitions/CompleteChoiceRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CompleteChoiceResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:completeChoice/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /feedback:
    post:
      operationId: "postFeedback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PostFeedbackRequest"
        required: true
        schema:
          $ref: "#/definitions/PostFeedbackRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/PostFeedbackResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:postFeedback/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /homepage:
    post:
      operationId: "createChoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateChoiceRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateChoiceRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CreateChoiceResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:createChoice/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /register:
    post:
      operationId: "registerParticipant"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RegisterParticipantRequest"
        required: true
        schema:
          $ref: "#/definitions/RegisterParticipantRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RegisterParticipantResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:375853300759:function:registerParticipant/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
definitions:
  CreateChoiceRequest:
    type: "object"
    required:
    - "maxParticipants"
    - "name"
    - "description"
    - "alternatives"
    properties:
      name:
        type: "string"
      maxParticipants:
        type: "string"
      description:
        type: "string"
      participantList:
        type: "array"
        items:
          $ref: "#/definitions/Alternative"
  CreateChoiceResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
  
  RegisterParticipantRequest:
    type: "object"
    required:
    - "choiceID"
    - "name"
    - "password"
    properties:
      choiceID:
        type: "string"
      name:
        type: "string"
      password:
        type: "string"
  RegisterParticipantResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
  
        
  AmendVoteRequest:
    type: "object"
    required:
    - "voteID"
    - "amendmentType"
    - "participant"
    properties:
      voteID:
        type: "string"
      participant:
        type: "string"
      amendmentType:
        type: "boolean"
  AmendVoteResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
        
  PostFeedbackRequest:
    type: "object"
    required:
    - "alternativeID"
    - "name"
    - "text"
    properties:
      alternativeID:
        type: "string"
      name:
        type: "string"
      text:
        type: "string"
  
  PostFeedbackResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
  
  CompleteChoiceRequest:
    type: "object"
    required: 
      - "choiceID"
    properties:
      choiceID:
       type: "string"
        
  CompleteChoiceResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
        
  CreateReportRequest:
    type: "object"
    required:
    - "date"
    properties:
      type: "object"
    
  CreateReportResponse:
    type: "object"
    required:
    - "response"
    - "listOfChoices"
    - "statusCode"
    properties:
      listOfChoices:
        type: "array"
        items: 
          $ref: "#/definitions/ChoiceInfo"
      statusCode:
        type: "integer"
      response:
        type: "string"
      
    
  DeleteChoicesRequest:
    type: "object"
    required:
    - "howOld"
    properties:
      name:
        type: "number"
  
  DeleteChoicesResponse:
    type: "object"
    required:
    - "response"
    - "statusCode"
    properties:
      statusCode:
        type: "integer"
      response:
        type: "string"
  
  Alternative:
    type: "object"
    required: 
    - "name"
    - "description"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  
  ChoiceInfo:
    type: "object"
    required:
    - "ID"
    - "date"
    - "completed"
    properties:
      ID: 
        type: "string"
      date: 
        type: "string"
      completed:
        type: "boolean"
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /imartinovic/cs3733yamlAPI/1.1.0